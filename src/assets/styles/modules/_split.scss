// =============================================================================
// =VaiKai - Split Module
// =============================================================================

@import "aleksi/lengths/convert";
@import "shift/breakpoint";
@import "modules/grid";
@import "config/base";

// =settings
// -----------------------------------------------------------------------------
$split-min-height: 580px;
$split-min-height-m: 630px;
$split-min-height-l: 670px;
$split-inner-max-width: 1120px;
$split-gutter: 20px;
$split-gutter-s: 40px;
$split-breakpoints: 'm';

/* =split (base)
 * -------------------------------------------------------------------------- */

.split {
  position: relative;
  overflow: hidden;
}

.split-inner {
  @extend .ws-collapse;
  max-width: convert-length($split-inner-max-width, 'rem');
  margin: 0 auto;
  padding-left: convert-length($split-gutter, 'rem');
  padding-right: convert-length($split-gutter, 'rem');
}

.split-inner:before,
.split-body {
  @extend .ws-reset;
}

.split-object {
  position: relative;
  overflow: hidden;
  margin-left: -1 * convert-length($split-gutter, 'rem');
  margin-right: -1 * convert-length($split-gutter, 'rem');

  // center object horizontally
  text-align: center;
  > * {
    display: inline-block;
    // override this or use max-width to limit it
    width: 100%;
  }
}

@include shift('>s')
{
  .split-inner {
    padding-right: 0.5 * convert-length($split-gutter-s, 'rem');
    padding-left: 0.5 * convert-length($split-gutter-s, 'rem');
  }

  .split-object {
    margin-left: -1 * convert-length($split-gutter, 'rem');
    margin-right: -1 * convert-length($split-gutter, 'rem');
  }
}

/* =split (split point)
 * -------------------------------------------------------------------------- */

@include shift('>sm')
{
  .split-inner:before,
  .split-body {
    display: inline-block;
    vertical-align: middle;
  }

  .split-inner:before {
    content: "";
    min-height: convert-length($split-min-height, 'rem');
  }

  .split-body {
    position: relative;
    left: 50%;
    width: 50%;
    padding-left: convert-length($split-gutter-s, 'rem');
  }

  .split-object {
    position: absolute !important;
    top: 0;
    right: 50%;
    bottom: 0;
    left: 0;
    margin: 0;
    text-align: right;

    // center object vertically
    &:before,
    > * {
      vertical-align: middle;
    }

    &:before {
      content: "";
      display: inline-block;
      height: 100%;
    }
  }

  .split--uneven
  {
    .split-body {
      width: percentage(7/12);
      left: percentage(5/12);
    }

    .split-object {
      right: percentage(7/12);
    }
  }

  .split--reverse
  {
    .split-body {
      left: 0;
      padding-left: 0;
      padding-right: convert-length($split-gutter-s, 'rem');
    }

    .split-object {
      right: 0;
      left: 50%;
      text-align: left;
    }
  }

  .split--uneven.split--reverse .split-object {
    left: percentage(7/12);
  }
}

$split-inner-max-width-em: convert-length($split-inner-max-width, 'em', 16px);
@media screen and (min-width: $split-inner-max-width-em)
{
  .split--uneven .split-object {
    right: 50%;
    margin-right: convert-length(1/12 * $split-inner-max-width, 'rem');
  }


  .split--uneven.split--reverse .split-object {
    left: 50%;
    right: 0;
    margin-left: convert-length(1/12 * $split-inner-max-width, 'rem');
    margin-right: 0;
  }
}

@include shift('>m')
{
  .split-inner:before {
    min-height: $split-min-height-m;
  }
}

@include shift('>l')
{
  .split-inner:before {
    min-height: $split-min-height-l;
  }
}
